<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>The 2021 Shanghai Collegiate Programming Contest(A B C D E G J)</title>
      <link href="/2024/10/10/The%202021%20Shanghai%20Collegiate%20Programming%20Contest(A%20B%20C%20D%20E%20G%20J)/"/>
      <url>/2024/10/10/The%202021%20Shanghai%20Collegiate%20Programming%20Contest(A%20B%20C%20D%20E%20G%20J)/</url>
      
        <content type="html"><![CDATA[<p><strong>题目链接</strong>: <a href="https://codeforces.com/gym/103186">“Dashboard - The 2021 Shanghai Collegiate Programming Contest - Codeforces”</a></p><p>前言：剩余题目待补充</p><hr><p>A - 小A的点面论</p><p>算法：几何知识</p><p>题解：答案为两个向量的叉积,(三维空间中，两个向量的叉积就是这两个向量确定平面的法向量) 可直接利用公式，也可以暴力枚举计算。</p><p>代码一：时间复杂度O(1)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&quot;\n&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios::sync_with_stdio(0);cin.tie(0);</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e3</span> + <span class="number">100</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x, y, z;</span><br><span class="line">&#125;s[N];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">IOS;</span><br><span class="line">cin&gt;&gt;s[<span class="number">1</span>].x&gt;&gt;s[<span class="number">1</span>].y&gt;&gt;s[<span class="number">1</span>].z&gt;&gt;s[<span class="number">2</span>].x&gt;&gt;s[<span class="number">2</span>].y&gt;&gt;s[<span class="number">2</span>].z;</span><br><span class="line">    </span><br><span class="line">cout&lt;&lt;s[<span class="number">1</span>].y*s[<span class="number">2</span>].z-s[<span class="number">1</span>].z*s[<span class="number">2</span>].y&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">cout&lt;&lt;s[<span class="number">1</span>].z*s[<span class="number">2</span>].x-s[<span class="number">1</span>].x*s[<span class="number">2</span>].z&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout&lt;&lt;s[<span class="number">1</span>].x*s[<span class="number">2</span>].y-s[<span class="number">1</span>].y*s[<span class="number">2</span>].x;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码二：时间复杂度O($n^3$)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&quot;\n&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios::sync_with_stdio(0);cin.tie(0);</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e3</span> + <span class="number">100</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x, y, z;</span><br><span class="line">&#125;s[N];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">IOS;</span><br><span class="line">cin&gt;&gt;s[<span class="number">1</span>].x&gt;&gt;s[<span class="number">1</span>].y&gt;&gt;s[<span class="number">1</span>].z&gt;&gt;s[<span class="number">2</span>].x&gt;&gt;s[<span class="number">2</span>].y&gt;&gt;s[<span class="number">2</span>].z;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">-200</span>; i &lt;= <span class="number">200</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">-200</span>; j &lt;= <span class="number">200</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">-200</span>; k &lt;= <span class="number">200</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i*s[<span class="number">1</span>].x + j*s[<span class="number">1</span>].y + k*s[<span class="number">1</span>].z == <span class="number">0</span> &amp;&amp; i*s[<span class="number">2</span>].x + j*s[<span class="number">2</span>].y + k*s[<span class="number">2</span>].z == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;j&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;k;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>B - 小A的卡牌游戏</p><p>算法：dp</p><p>题解：如果题目简化为两组数a和b，则可按照b-a 降序排序，然后贪心地先选择b再选择a。基于此贪心思想，对本题使用dp，dp[i][j]表示在前i次选择中，有j次选择第三组卡牌c，剩余i-j次按照前面贪心思想选择剩余两组卡牌。每次状态转移时，比较前后两种状态（本次是否选择该组卡牌），取max即可。注意dp数组需初始化，最大值为-1e9，可更小。</p><p>代码：时间复杂度O($n^2$)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&quot;\n&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios::sync_with_stdio(0);cin.tie(0);</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">5e3</span> + <span class="number">100</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> n, A, B, C;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b, c;</span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span> &lt; (<span class="type">const</span> node &amp;y) <span class="type">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(b-a == y.b-y.a) <span class="keyword">return</span> c &gt; y.c;</span><br><span class="line"><span class="keyword">return</span> b-a &gt; y.b-y.a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;v[<span class="number">15010</span>];</span><br><span class="line"> </span><br><span class="line">ll dp[N][N];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">IOS;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;A&gt;&gt;B&gt;&gt;C;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin&gt;&gt;v[i].a&gt;&gt;v[i].b&gt;&gt;v[i].c;</span><br><span class="line"><span class="built_in">sort</span>(v<span class="number">+1</span>, v+n<span class="number">+1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = i<span class="number">+1</span>; j &lt;= C; j++)</span><br><span class="line">dp[i][j] = <span class="number">-1e9</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt;= <span class="built_in">min</span>(C, i); j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j) dp[i][j] = <span class="built_in">max</span>(dp[i][j], dp[i<span class="number">-1</span>][j<span class="number">-1</span>] + v[i].c);</span><br><span class="line"><span class="keyword">if</span>(i-j &lt;= B) dp[i][j] = <span class="built_in">max</span>(dp[i][j], dp[i<span class="number">-1</span>][j] + v[i].b);</span><br><span class="line"><span class="keyword">else</span> dp[i][j] = <span class="built_in">max</span>(dp[i][j], dp[i<span class="number">-1</span>][j] + v[i].a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;dp[n][C];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>C - 小A的期末考试</p><p>算法：模拟</p><p>题解：简单模拟，注意输出的格式。</p><p>代码：时间复杂度O(n)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&quot;\n&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios::sync_with_stdio(0);cin.tie(0);</span></span><br><span class="line"><span class="type">const</span> <span class="type">double</span> eps = <span class="number">1e-6</span>; </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> n, m, sum;</span><br><span class="line"><span class="type">double</span> mid;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span> &lt; (<span class="type">const</span> node &amp;y) <span class="type">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> a &lt; y.a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;s[N];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">IOS;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) </span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;s[i].a&gt;&gt;s[i].b;</span><br><span class="line">sum += s[i].b;</span><br><span class="line">&#125;</span><br><span class="line">mid = <span class="number">1.0</span>*sum/n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i].a == m) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i].b &lt; <span class="number">60</span>) s[i].b = <span class="number">60</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">1.0</span>*s[i].b &gt;= mid + eps) s[i].b -= <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(s[i].b &lt; <span class="number">0</span>) s[i].b = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(s<span class="number">+1</span>, s+n<span class="number">+1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n<span class="number">-1</span>; i++) cout&lt;&lt;s[i].b&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">cout&lt;&lt;s[n].b;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>D - Zztrans的班级合照</p><p>算法：dp</p><p>题解：dp[i][j]表示两排共选择了i个人，第一排比第二排多j个人。使用数组cnt存储相同身高的人数，将身高升序排序，去重。第一层循环表示选择身高为a[i]的学生，第二层循环表示目前第一排比第二排多j个学生，第三层循环表示在身高为a[i]的学生中选择k个放在第二排，剩余cnt[a[i]]-k个放在第一排。（这k个学生放第一排或者放第二排都可，只是状态转移方程有一些不同）</p><blockquote><p>假设之前第一排有x+j个学生，第二排有x个学生，则放置k个学生之后，第一排学生总数变为x+j+cnt[a[i]]-k，第二排变为x+k，此时第一排和第二排的学生数量差值为now &#x3D; j+cnt[a[i]]-2*k，当差值大于0的时候才是有效转移。所以现在的状态dp[i][now]可以从上次的的状态dp[i-1][j]转移，由于选择的是身高为a[i]的一类学生，学生们身高一样但代表着的还是不同的人，所以需要乘以该身高学生个数的阶乘。（阶乘在开始预处理并存储在数组里面）</p></blockquote><p>代码：时间复杂度O($n^2$)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&quot;\n&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios::sync_with_stdio(0);cin.tie(0);</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">5e3</span> + <span class="number">100</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll a[N], cnt[N], dp[N][N], fac[N];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init_fac</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fac[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= N; i++) (fac[i] = fac[i<span class="number">-1</span>]*i)%=mod;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">IOS;</span><br><span class="line"><span class="built_in">init_fac</span>();</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line">cnt[a[i]]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a<span class="number">+1</span>, a+n<span class="number">+1</span>);</span><br><span class="line"><span class="type">int</span> nn = <span class="built_in">unique</span>(a<span class="number">+1</span>, a+n<span class="number">+1</span>)-(a<span class="number">+1</span>);</span><br><span class="line">dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= nn; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt;= n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt;= cnt[a[i]]; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> now = j+cnt[a[i]]<span class="number">-2</span>*k;</span><br><span class="line"><span class="keyword">if</span>(now &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">(dp[i][now] += dp[i<span class="number">-1</span>][j]*fac[cnt[a[i]]])%=mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;dp[nn][<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>E - Zztrans的庄园</p><p>算法：概率与期望</p><p>题解：基本期望知识。期望定义式：<img src="/The%202021%20Shanghai%20Collegiate%20Programming%20Contest(A%20B%20C%20D%20E%20G%20J)/image.png" alt="alt text"></p><p>代码：时间复杂度：O(n)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios::sync_with_stdio(0);cin.tie(0);</span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line"><span class="type">double</span> sum;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// IOS;</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> s; <span class="type">double</span> x; cin&gt;&gt;s&gt;&gt;x;</span><br><span class="line"><span class="keyword">if</span>(s == <span class="string">&#x27;A&#x27;</span>) x *= <span class="number">57</span>;</span><br><span class="line"><span class="keyword">if</span>(s == <span class="string">&#x27;B&#x27;</span>) x *= <span class="number">31</span>;</span><br><span class="line"><span class="keyword">if</span>(s == <span class="string">&#x27;C&#x27;</span>) x *= <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(s == <span class="string">&#x27;D&#x27;</span>) x *= <span class="number">-7</span>;</span><br><span class="line"><span class="keyword">if</span>(s == <span class="string">&#x27;S&#x27;</span>) x *= <span class="number">9977</span>;</span><br><span class="line">sum += x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.4f&quot;</span>, sum*k);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>G - 鸡哥的雕像</p><p>算法：逆元</p><p>题解：每个位置的答案就是所有的数的乘积除以该位置上的数字并对998244353取模，使用逆元计算sum&#x2F;a[i]，即sum*ksm(a[i], mod-2)（ksm为快速幂函数）。但由于998244353 &lt; 1e9。所以分三种情况：给出的数中有两个及以上的998244353，这样的话所有的位置最终结果都为0；给出的数中有一位是998244353，则只有这一位上的结果为其它为上数的乘积，其他位全为0；没有出现998244353，则按照正常公式计算。</p><p>代码：时间复杂度O(n)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&quot;\n&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios::sync_with_stdio(0);cin.tie(0);</span></span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">100</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">ksm</span><span class="params">(ll a, ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) (res *= a)%=mod;</span><br><span class="line">        (a *= a)%=mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">ll n, cnt;</span><br><span class="line">ll a[N];</span><br><span class="line"><span class="type">int</span> vis[N];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">IOS;</span><br><span class="line">ll sum = <span class="number">1</span>;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line"><span class="keyword">if</span>(a[i] == mod) vis[i] = <span class="number">1</span>, cnt++;</span><br><span class="line"><span class="keyword">else</span> (sum *= a[i])%=mod;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span>(cnt &gt;= <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n<span class="number">-1</span>; i++) cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout&lt;&lt;<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(cnt == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n<span class="number">-1</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[i]) cout&lt;&lt;sum&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(vis[n]) cout&lt;&lt;sum;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n<span class="number">-1</span> ;i++) cout&lt;&lt;sum*<span class="built_in">ksm</span>(a[i], mod<span class="number">-2</span>)%mod&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout&lt;&lt;<span class="function">sum*<span class="title">ksm</span><span class="params">(a[n], mod<span class="number">-2</span>)</span>%mod</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>J - Alice and Bob 1</p><p>算法：思维</p><p>题解：若数据全为正值：在轮流取卡片的过程中，Alice拿当前最大的，Bob取第二大的即可保证Alice取得的为最大值。但由于题目最后的结果为绝对值且所给数据中有负值，所以在数据按递减排序后，会有Alice从前往后取，先取正值再取负值综合为正值，和从后往前取，先取负值再取正值总和为负值，这两种结果的绝对值都有可能是最大值。</p><blockquote><p>例如第一组数据： 5 3 2 1 -1 -2 这种情况下Alice要从前往后取。第二组数据：1 2 -3 -5 -7 -8这种情况下Alice要从后往前取。</p></blockquote><p>代码：时间复杂度O(n)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios::sync_with_stdio(0);cin.tie(0);</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">5e3</span> + <span class="number">100</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll sum1, sum2, sum;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt; y;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">IOS;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin&gt;&gt;a[i], sum += a[i];</span><br><span class="line"><span class="built_in">sort</span>(a<span class="number">+1</span>, a+n<span class="number">+1</span>, cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i += <span class="number">2</span>) sum1 += a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i -= <span class="number">2</span>) sum2 += a[i];</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">abs</span>(sum1) &gt; <span class="built_in">abs</span>(sum2)) cout&lt;&lt;(ll)<span class="built_in">abs</span>(sum1) - (ll)<span class="built_in">abs</span>(sum-sum1);</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;(ll)<span class="built_in">abs</span>(sum2) - (ll)<span class="built_in">abs</span>(sum-sum2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/The%202021%20Shanghai%20Collegiate%20Programming%20Contest(A%20B%20C%20D%20E%20G%20J)/image-1.png" alt="alt text"></p>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>3d_coordinates.hdev</title>
      <link href="/2024/10/09/3d_coordinates.hdev/"/>
      <url>/2024/10/09/3d_coordinates.hdev/</url>
      
        <content type="html"><![CDATA[<h1 id="3d-coordinates-hdev"><a href="#3d-coordinates-hdev" class="headerlink" title="3d_coordinates.hdev"></a>3d_coordinates.hdev</h1><p>关于相机标定的详细解释，请参考：<a href="https://blog.csdn.net/cashmood/article/details/100089295">Halcon相机标定</a></p><hr><blockquote><p><strong>功能：相机在3D空间的标定</strong>，对象会倾斜和旋转。标定的主要目的是确定相机的参数<em>CamParam</em>（如焦距、主点坐标、畸变系数、相机在世界坐标系中的位置和姿态等）。这些参数是准确测量和3D重建的基础。标定后进行测量，计算标定板的边距与标志点的直径，并通过测量结果的标准差反映标定效果。</p></blockquote><ol><li><p>设置窗口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dev_close_window ()</span><br><span class="line">dev_open_window (0, 0, 768, 576, &#x27;black&#x27;, WindowHandle)</span><br><span class="line">dev_update_off ()</span><br><span class="line">dev_set_draw (&#x27;margin&#x27;)</span><br><span class="line">dev_set_line_width (3)</span><br><span class="line">set_display_font (WindowHandle, 14, &#x27;mono&#x27;, &#x27;true&#x27;, &#x27;false&#x27;)</span><br></pre></td></tr></table></figure></li><li><p>创建标定数据和相机参数，读取多张标定图像并寻找标定板，提取并显示标定板的轮廓与位置，最后进行相机标定，计算出相机参数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">* 标定板描述文件</span><br><span class="line">CalTabDescrFile := &#x27;caltab_big.descr&#x27; </span><br><span class="line">* 相机参数</span><br><span class="line">gen_cam_par_area_scan_division (0.008, 0, 0.0000086, 0.0000086, 384, 288, 768, 576, StartCamPar)</span><br><span class="line">* 创建标定数据对象</span><br><span class="line">create_calib_data (&#x27;calibration_object&#x27;, 1, 1, CalibDataID) </span><br><span class="line">* 将相机参数设置到标定数据对象中</span><br><span class="line">set_calib_data_cam_param (CalibDataID, 0, [], StartCamPar)</span><br><span class="line">* 将标定板描述文件与标定数据对象关联</span><br><span class="line">set_calib_data_calib_object (CalibDataID, 0, CalTabDescrFile)</span><br><span class="line"></span><br><span class="line">NumImages := 10</span><br><span class="line">for I := 1 to NumImages by 1</span><br><span class="line">    read_image (Image, &#x27;calib/calib-3d-coord-&#x27; + I$&#x27;02d&#x27;)</span><br><span class="line">    dev_display (Image)</span><br><span class="line">    Message := &#x27;Find calibration plate in\nall calibration images (&#x27; + I + &#x27;/&#x27; + NumImages + &#x27;)&#x27;</span><br><span class="line">    disp_message (WindowHandle, Message, &#x27;window&#x27;, 12, 12, &#x27;black&#x27;, &#x27;true&#x27;)</span><br><span class="line">    * 在图像中查找标定板，根据标定数据ID和图像索引（I-1）进行查找</span><br><span class="line">    find_calib_object (Image, CalibDataID, 0, 0, I - 1, [], [])</span><br><span class="line">    * 从标定数据中获取相机的初始参数</span><br><span class="line">    get_calib_data (CalibDataID, &#x27;camera&#x27;, 0, &#x27;init_params&#x27;, StartCamPar)</span><br><span class="line">    * 获取标定过程中观察到的标定点的坐标和姿态</span><br><span class="line">    get_calib_data_observ_points (CalibDataID, 0, 0, I - 1, Row, Column, Index, Pose)</span><br><span class="line">    * 获取标定板的轮廓数据</span><br><span class="line">    get_calib_data_observ_contours (Contours, CalibDataID, &#x27;caltab&#x27;, 0, 0, I - 1)</span><br><span class="line">    * 生成一个十字形轮廓，中心在找到的标定点位置</span><br><span class="line">    gen_cross_contour_xld (Cross, Row, Column, 6, 0.785398)</span><br><span class="line">    dev_set_color (&#x27;green&#x27;)</span><br><span class="line">    dev_display (Contours)</span><br><span class="line">    dev_set_color (&#x27;yellow&#x27;)</span><br><span class="line">    dev_display (Cross)</span><br><span class="line">endfor</span><br><span class="line">disp_continue_message (WindowHandle, &#x27;black&#x27;, &#x27;true&#x27;)</span><br><span class="line">stop ()</span><br><span class="line">* 执行相机标定，计算相机的实际参数</span><br><span class="line">calibrate_cameras (CalibDataID, Error)</span><br><span class="line">* 获取标定后的相机参数</span><br><span class="line">get_calib_data (CalibDataID, &#x27;camera&#x27;, 0, &#x27;params&#x27;, CamParam)</span><br></pre></td></tr></table></figure></li><li><p>对每张图像进行测量，包括标定板宽度和孔半径。然后转换坐标系，将测量结果从图像坐标转换到世界坐标。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">for I := 1 to NumImages by 1</span><br><span class="line">    read_image (Image, &#x27;calib/calib-3d-coord-&#x27; + I$&#x27;02d&#x27;)</span><br><span class="line">    * 根据相机参数和标定数据，从图像中获取测量位置，包括板的中心行列和方向</span><br><span class="line">    get_measure_positions (Image, PlateRegion, CalibDataID, I, Distance, Phi, RowCenter, ColumnCenter)</span><br><span class="line">    * 生成一个矩形轮廓，位置和方向基于测量结果</span><br><span class="line">    gen_rectangle2_contour_xld (Rectangle, RowCenter, ColumnCenter, Phi, Distance * 0.52, 8)</span><br><span class="line">    * 生成一个测量矩形，用于后续的测量操作</span><br><span class="line">    gen_measure_rectangle2 (RowCenter, ColumnCenter, Phi, Distance * 0.52, 8, 768, 576, &#x27;nearest_neighbor&#x27;, MeasureHandle)</span><br><span class="line">    * 对图像进行测量，获取矩形边缘的位置、强度和测量结果</span><br><span class="line">    measure_pos (Image, MeasureHandle, 1, 40, &#x27;all&#x27;, &#x27;all&#x27;, RowEdge, ColumnEdge, Amplitude, Distance1)</span><br><span class="line"></span><br><span class="line">    Rows := [RowEdge[0],RowEdge[|RowEdge| - 1]]</span><br><span class="line">    Columns := [ColumnEdge[0],ColumnEdge[|RowEdge| - 1]]</span><br><span class="line">    * 生成一个十字形轮廓，表示测量的边缘位置</span><br><span class="line">    gen_cross_contour_xld (Cross, Rows, Columns, 16, Phi)</span><br><span class="line"></span><br><span class="line">    * 获取标定对象的姿态信息</span><br><span class="line">    get_calib_data (CalibDataID, &#x27;calib_obj_pose&#x27;, [0,I - 1], &#x27;pose&#x27;, Pose)</span><br><span class="line">    * 将图像坐标转换为世界坐标系</span><br><span class="line">    image_points_to_world_plane (CamParam, Pose, Rows, Columns, &#x27;m&#x27;, SX, SY)</span><br><span class="line">    * 测量出的宽度</span><br><span class="line">    distance_pp (SY[0], SX[0], SY[1], SX[1], Width)</span><br><span class="line">   </span><br><span class="line">    dev_display (Image)</span><br><span class="line">    dev_set_color (&#x27;white&#x27;)</span><br><span class="line">    dev_set_line_width (3)</span><br><span class="line">    dev_display (Rectangle)</span><br><span class="line">    dev_set_color (&#x27;green&#x27;)</span><br><span class="line">    dev_set_draw (&#x27;fill&#x27;)</span><br><span class="line">    dev_set_line_width (2)</span><br><span class="line">    dev_display (Cross)</span><br><span class="line">    dev_set_draw (&#x27;margin&#x27;)</span><br><span class="line">    disp_message (WindowHandle, &#x27;Width = &#x27; + (Width * 100)$&#x27;8.3f&#x27; + &#x27;cm&#x27;, &#x27;window&#x27;, 12, 12, &#x27;black&#x27;, &#x27;true&#x27;)</span><br><span class="line">    disp_continue_message (WindowHandle, &#x27;black&#x27;, &#x27;true&#x27;)</span><br><span class="line">    stop ()</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    * 对标定板内区域进行圆形腐蚀操作，生成ROI</span><br><span class="line">    erosion_circle (PlateRegion, ROI, 17.5)</span><br><span class="line">    reduce_domain (Image, ROI, ImageReduced)</span><br><span class="line">    * 边缘检测</span><br><span class="line">    edges_sub_pix (ImageReduced, Edges, &#x27;canny&#x27;, 1, 20, 60)</span><br><span class="line">    * 通过长度筛选</span><br><span class="line">    select_contours_xld (Edges, SelectedEdges, &#x27;contour_length&#x27;, 20, 99999999, -0.5, 0.5)</span><br><span class="line">    </span><br><span class="line">    * 对选中的轮廓进行椭圆拟合，输出椭圆的参数（中心行列、角度、半径等）</span><br><span class="line">    fit_ellipse_contour_xld (SelectedEdges, &#x27;fitzgibbon&#x27;, -1, 2, 0, 200, 3, 2, Row, Column, Phi, Radius1, Radius2, StartPhi, EndPhi, PointOrder)</span><br><span class="line">    * 计算拟合得到的半径的平均值和标准偏差</span><br><span class="line">    MeanRadius1 := mean(Radius1)</span><br><span class="line">    MeanRadius2 := mean(Radius2)</span><br><span class="line">    DevRadius1 := deviation(Radius1)</span><br><span class="line">    DevRadius2 := deviation(Radius2)</span><br><span class="line">    </span><br><span class="line">    * 将选中的轮廓转换到世界坐标系</span><br><span class="line">    contour_to_world_plane_xld (SelectedEdges, WorldCircles, CamParam, Pose, &#x27;mm&#x27;)</span><br><span class="line">    </span><br><span class="line">    * 对世界坐标系中的圆进行椭圆拟合，输出参数</span><br><span class="line">    fit_ellipse_contour_xld (WorldCircles, &#x27;fitzgibbon&#x27;, -1, 2, 0, 200, 3, 2, Row, Column, Phi, RadiusW1, RadiusW2, StartPhi, EndPhi, PointOrder)</span><br><span class="line">    MeanRadiusW1 := mean(RadiusW1)</span><br><span class="line">    MeanRadiusW2 := mean(RadiusW2)</span><br><span class="line">    DevRadiusW1 := deviation(RadiusW1)</span><br><span class="line">    DevRadiusW2 := deviation(RadiusW2)</span><br><span class="line">    </span><br><span class="line">    dev_display (Image)</span><br><span class="line">    dev_set_color (&#x27;yellow&#x27;)</span><br><span class="line">    dev_set_line_width (3)</span><br><span class="line">    dev_display (SelectedEdges)</span><br><span class="line">    Message := &#x27;Measured dimensions of the ellipses&#x27;</span><br><span class="line">    Message[0] := &#x27;                    Mean Radius1; Mean Radius2; (Standard deviations [%])&#x27;</span><br><span class="line">    * 图像坐标系下的平均半径及其标准偏差</span><br><span class="line">    Message[1] := &#x27;Image coordinates:       &#x27; + MeanRadius1$&#x27;5.2f&#x27; + &#x27;px; &#x27; + MeanRadius2$&#x27;5.2f&#x27; + &#x27;px            (&#x27; + (DevRadius1 / MeanRadius1 * 100)$&#x27;4.2f&#x27; + &#x27;, &#x27; + (DevRadius2 / MeanRadius2 * 100)$&#x27;4.2f&#x27; + &#x27;)&#x27;</span><br><span class="line">    * 世界坐标系下的平均半径及其标准偏差</span><br><span class="line">    Message[2] := &#x27;World coordinates:       &#x27; + (MeanRadiusW1 / 10)$&#x27;5.2f&#x27; + &#x27;cm; &#x27; + (MeanRadiusW2 / 10)$&#x27;5.2f&#x27; + &#x27;cm            (&#x27; + (DevRadiusW1 / MeanRadiusW1 * 100)$&#x27;4.2f&#x27; + &#x27;, &#x27; + (DevRadiusW2 / MeanRadiusW2 * 100)$&#x27;4.2f&#x27; + &#x27;)&#x27;</span><br><span class="line">    disp_message (WindowHandle, Message, &#x27;window&#x27;, 12, 12, &#x27;black&#x27;, &#x27;true&#x27;)</span><br><span class="line">    if (I &lt; 10)</span><br><span class="line">        disp_continue_message (WindowHandle, &#x27;black&#x27;, &#x27;true&#x27;)</span><br><span class="line">        stop ()</span><br><span class="line">    else</span><br><span class="line">        disp_end_of_program_message (WindowHandle, &#x27;black&#x27;, &#x27;true&#x27;)</span><br><span class="line">    endif</span><br><span class="line">endfor</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Halcon </category>
          
          <category> Halcon示例程序 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
